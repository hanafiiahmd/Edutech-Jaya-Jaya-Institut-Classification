# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16GWBeQ8dfDzGsx4sQgZiwwJKeNWoX9zO
"""

import streamlit as st
import numpy as np
import joblib

# Load model dan scaler
model = joblib.load('random_forest_edutechjj_model.joblib')
scaler = joblib.load('scaler.joblib')

input_scaled = scaler.transform(input_data)

# Judul dan subjudul
st.title("🎓 Prediksi Resiko Dropout Siswa")
st.subheader("Jaya Jaya Institut")

# Deskripsi aplikasi
st.markdown("Masukkan data siswa berdasarkan hasil akademik dan status administratif mereka.")

# Input user dengan elemen UI interaktif
col1, col2 = st.columns(2)
with col1:
    prev_qualification = st.number_input("Nilai Kualifikasi Sebelumnya", min_value=0.0, step=0.1)
    admission_grade = st.number_input("Nilai Penerimaan", min_value=0.0, step=0.1)
    age = st.slider("Usia Saat Masuk", min_value=15, max_value=70, step=1)
    cu1_enrolled = st.number_input("Jumlah Mata Kuliah Semester 1 Diambil", min_value=0, step=1)
    cu1_approved = st.number_input("Jumlah Mata Kuliah Semester 1 Disetujui", min_value=0, step=1)
    cu1_grade = st.number_input("Nilai Rata-rata Semester 1", min_value=0.0, step=0.1)

with col2:
    tuition_fees = st.radio("Apakah Uang Kuliah Sudah Dibayar?", options=["Belum", "Sudah"])
    tuition_fees = 1 if tuition_fees == "Sudah" else 0
    cu2_enrolled = st.number_input("Jumlah Mata Kuliah Semester 2 Diambil", min_value=0, step=1)
    cu2_evaluated = st.number_input("Jumlah Evaluasi Mata Kuliah Semester 2", min_value=0, step=1)
    cu2_approved = st.number_input("Jumlah Mata Kuliah Semester 2 Disetujui", min_value=0, step=1)
    cu2_grade = st.number_input("Nilai Rata-rata Semester 2", min_value=0.0, step=0.1)

# Buat array input
input_data = np.array([[prev_qualification, admission_grade, tuition_fees, age,
                        cu1_enrolled, cu1_approved, cu1_grade,
                        cu2_enrolled, cu2_evaluated, cu2_approved, cu2_grade]])

# Tombol untuk memulai prediksi
if st.button("🔍 Prediksi"):
    with st.spinner('Menghitung Prediksi...'):
        # Prediksi
        prediction = model.predict(input_scaled)[0]

    st.success('Prediksi Selesai!')

    # Menampilkan hasil prediksi
    if prediction == 0:
        st.error("⚠️ Siswa ini berisiko tinggi akan Dropout.", icon="🚨")
    else:
        st.success("✅ Siswa ini berpotensi untuk graduate.", icon="🎓")

# Custom CSS untuk styling
st.markdown("""
<style>
    .css-1v3fvcr {
        background-color: #f0f8ff;
    }
    .stButton>button {
        background-color: #4CAF50;
        color: white;
    }
</style>
""", unsafe_allow_html=True)
